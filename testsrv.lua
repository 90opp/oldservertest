local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local player = Players.LocalPlayer

local jobIds = {}
local webhookUrl = ""
local placeId = game.PlaceId
local universeId = nil

local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "ServerTool"

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 400, 0, 300)
mainFrame.Position = UDim2.new(0.3, 0, 0.3, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

local function createButton(text, position, onClick)
    local button = Instance.new("TextButton", mainFrame)
    button.Size = UDim2.new(0.9, 0, 0, 40)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Text = text
    button.MouseButton1Click:Connect(onClick)
    return button
end

local function sendWebhook(msg)
    if webhookUrl == "" then return end
    local payload = {
        content = msg
    }
    local req = {
        Url = webhookUrl,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode(payload)
    }
    local success, response = pcall(function()
        if syn and syn.request then
            return syn.request(req)
        elseif request then
            return request(req)
        elseif http_request then
            return http_request(req)
        end
    end)
    if not success then warn("Webhook error", response) end
end

-- === –ó–∞–≥—Ä—É–∑–∫–∞ JobId –∏–∑ —Å—Å—ã–ª–∫–∏ ===
local function loadJobIds()
    local success, data = pcall(function()
        return game:HttpGet("https://raw.githubusercontent.com/90opp/oldservertest/main/servers.txt")
    end)
    if success then
        jobIds = {}
        for line in string.gmatch(data, "[^\r\n]+") do
            table.insert(jobIds, line)
        end
        print("–ó–∞–≥—Ä—É–∂–µ–Ω–æ JobId:", #jobIds)
    else
        warn("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤")
    end
end

-- === –ü–µ—Ä–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –ø–æ–ø—ã—Ç–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è ===
local function tryTeleportAll()
    for i, jobId in ipairs(jobIds) do
        sendWebhook("üåÄ –ü–æ–ø—ã—Ç–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞: " .. jobId)
        local success, err = pcall(function()
            TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
        end)
        if not success then
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", jobId)
        end
        wait(10)
    end
end

-- === –í—Ç–æ—Ä–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ –æ —Å–µ—Ä–≤–µ—Ä–∞—Ö –ø–æ jobId ===
local function getServerInfo(jobId)
    local url = "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?limit=100"
    local success, response = pcall(function()
        return HttpService:JSONDecode(game:HttpGet(url))
    end)
    if success and response and response.data then
        for _, server in ipairs(response.data) do
            if server.id == jobId then
                print("‚ÑπÔ∏è JobId:", jobId, "| –ò–≥—Ä–æ–∫–æ–≤:", server.playing, "/", server.maxPlayers)
                return true
            end
        end
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω:", jobId)
    else
        warn("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤")
    end
end

-- === –ö–Ω–æ–ø–∫–∏ ===
createButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ä–≤–µ—Ä–∞ (TP)", UDim2.new(0.05, 0, 0.2, 0), function()
    loadJobIds()
    tryTeleportAll()
end)

createButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω—Ñ–æ", UDim2.new(0.05, 0, 0.35, 0), function()
    loadJobIds()
    for _, jobId in ipairs(jobIds) do
        getServerInfo(jobId)
        wait(1)
    end
end)
